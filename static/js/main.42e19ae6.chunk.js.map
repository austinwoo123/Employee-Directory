{"version":3,"sources":["components/DataArea/index.js","components/Search/index.js","components/Main/index.js","components/Header/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["DataArea","state","employees","Employees","allEmployees","isLoading","headings","sortDob","event","dob","target","value","setState","sort","x","y","Date","getTime","htmlFor","onChange","this","className","map","props","console","log","name","src","process","pic","email","phone","id","Component","SearchBar","placeholder","type","Main","Search","Header","Wrapper","children","App","ReactDOM","render","document","getElementById"],"mappings":"g9BAEqBA,E,4MACjBC,MAAQ,CACJC,UAAWC,EACXC,aAAcD,EACdE,WAAW,G,EAGfC,SAAW,CAAC,W,EAuBZC,QAAU,SAACC,GACP,IAAMC,EAAMD,EAAME,OAAOC,MACb,QAARF,EACA,EAAKG,SAAS,CACVV,UAAW,EAAKD,MAAMC,UAAUW,MAAK,SAAUC,EAAGC,GAG9C,OAFY,IAAIC,KAAKF,EAAEL,KAAKQ,UAChB,IAAID,KAAKD,EAAEN,KAAKQ,UACH,GAAK,OAGvB,UAARR,GACP,EAAKG,SAAS,CACVV,UAAW,EAAKD,MAAMC,UAAUW,MAAK,SAAUC,EAAGC,GAG9C,OAFY,IAAIC,KAAKF,EAAEL,KAAKQ,UAChB,IAAID,KAAKD,EAAEN,KAAKQ,UACH,GAAK,Q,4CAM9C,WACI,OACI,gCACI,gCACI,uBAAOC,QAAQ,MAAf,+BACA,yBAAQC,SAAUC,KAAKb,QAAvB,UACI,wBAAQI,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,0BACA,wBAAQA,MAAM,QAAd,gCAGR,wBAAOU,UAAU,sBAAjB,UACI,gCACI,+BACI,yCACA,sCACA,+CACA,uCACA,4CAGR,gCACKD,KAAKnB,MAAMC,UAAUoB,KAAI,SAAUC,GAEhC,OADAC,QAAQC,IAAIF,EAAMG,MAEd,+BACI,+BACI,qBAAKC,IAAKC,sBAAyBL,EAAMM,MAD7C,OAGA,6BAAKN,EAAMG,OACX,6BAAKH,EAAMd,MACX,6BAAKc,EAAMO,QACX,6BAAKP,EAAMQ,UAPNR,EAAMS,mB,GA5ETC,aCmBvBC,EAlBG,SAAC,GAA+B,IAA7Bf,EAA4B,EAA5BA,SAAUgB,EAAkB,EAAlBA,YAG3B,OACI,sBAAKd,UAAU,SAAf,UACI,sBAAMA,UAAU,eAGhB,uBACIA,UAAU,cACVe,KAAK,OACLjB,SAAUA,EACVgB,YAAaA,QCsBdE,MArBf,WAWI,OACI,sBAAKhB,UAAU,OAAf,UAEI,cAACiB,EAAD,CAAQnB,SAVO,aAUmBgB,YAAY,iBAC9C,cAAC,EAAD,Q,MCnBGI,MATf,WACI,OACI,sBAAKlB,UAAU,SAAf,UACI,oDACA,+E,MCIGmB,MARf,YAAgC,IAAbC,EAAY,EAAZA,SACf,OACI,qBAAKpB,UAAU,UAAf,SACKoB,K,MCWEC,MAXf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UCLRsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.42e19ae6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Employees from \"../../Data/employees.json\";\r\nexport default class DataArea extends Component {\r\n    state = {\r\n        employees: Employees,\r\n        allEmployees: Employees,\r\n        isLoading: false,\r\n    };\r\n\r\n    headings = [\"name...\"];\r\n\r\n\r\n    // componentDidMount() {\r\n    //     console.log(\"hello\")\r\n    //     fetch(\"/employees.json\")\r\n    //         .then(function (response) {\r\n    //             console.log(response)\r\n    //             return response.json();\r\n    //         })\r\n    //         .then((response) => {\r\n    //             console.log(response);\r\n    //             this.setState({\r\n    //                 employees: response,\r\n    //                 allEmployees: response,\r\n    //                 isLoading: false,\r\n    //             });\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log(error);\r\n    //         });\r\n    // }\r\n\r\n    sortDob = (event) => {\r\n        const dob = event.target.value;\r\n        if (dob === \"old\") {\r\n            this.setState({\r\n                employees: this.state.employees.sort(function (x, y) {\r\n                    var date1 = new Date(x.dob).getTime();\r\n                    var date2 = new Date(y.dob).getTime();\r\n                    return (date1 > date2) ? 1 : -1;\r\n                }),\r\n            });\r\n        } else if (dob === \"young\") {\r\n            this.setState({\r\n                employees: this.state.employees.sort(function (x, y) {\r\n                    var date1 = new Date(x.dob).getTime();\r\n                    var date2 = new Date(y.dob).getTime();\r\n                    return (date1 < date2) ? 1 : -1;\r\n                }),\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <label htmlFor=\"dob\">Sort by birthday:</label>\r\n                    <select onChange={this.sortDob}>\r\n                        <option value=\"current\">Current</option>\r\n                        <option value=\"old\">Old to Young</option>\r\n                        <option value=\"young\">Young to Old</option>\r\n                    </select>\r\n                </div>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Picture</th>\r\n                            <th>Name</th>\r\n                            <th>Date of Birth</th>\r\n                            <th>Email</th>\r\n                            <th>Phone</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.employees.map(function (props) {\r\n                            console.log(props.name)\r\n                            return (\r\n                                <tr key={props.id}>\r\n                                    <td>\r\n                                        <img src={process.env.PUBLIC_URL + props.pic} />;\r\n                                    </td>\r\n                                    <td>{props.name}</td>\r\n                                    <td>{props.dob}</td>\r\n                                    <td>{props.email}</td>\r\n                                    <td>{props.phone}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\nconst SearchBar = ({ onChange, placeholder }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"Search\">\r\n            <span className=\"SearchSpan\">\r\n\r\n            </span>\r\n            <input\r\n                className=\"SearchInput\"\r\n                type=\"text\"\r\n                onChange={onChange}\r\n                placeholder={placeholder}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","\r\nimport \"./style.css\";\r\nimport DataArea from \"../DataArea\"\r\nimport Search from \"../Search/index\"\r\nimport React, { useState } from 'react';\r\n\r\n\r\n\r\n// function handleOnChange(arr, query) {\r\n//     return arr.filter(function (name) {\r\n//         return name.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n//     })\r\n// }\r\n\r\n\r\n\r\nfunction Main() {\r\n\r\n\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const handleOnChange = () => {\r\n\r\n        //     const [count, setCount] = useState(\"\");\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main\">\r\n\r\n            <Search onChange={handleOnChange} placeholder='Enter a name' />\r\n            <DataArea />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\" >\r\n            <h1>Employee Directory</h1>\r\n            <p>See information about your employees here </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper({ children }) {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","import React from 'react';\nimport Main from './components/Main';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}